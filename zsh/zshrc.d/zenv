# Platform specific configurations
export PATH="$PATH:${HOME}/.cargo/bin"

if [[ $OSTYPE = 'linux-gnu' ]]; then
    if [[ $(uname -a) =~ "Microsoft" ]]; then
        GOROOT="/usr/lib/go"
    else
        GOROOT="/usr/lib/go"
    fi

    GOPATH="${HOME}/Projects"
    PATH="$PATH:$GOROOT/bin:$GOPATH/bin:${HOME}/.local/bin:/snap/bin:${HOME}/.emacs.d/bin"

    export GOPATH GOROOT PATH

    alias pip="pip3"
    #alias keepassxc="keepassxc -style adwaita-dark"
    source ${HOME}/.zsh.gnu

    # Check if zsh syntax highlighting is available.
    if [ -f "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
        source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    fi

    # Google Cloud CLI zsh tab completion
    if [ -f "/opt/google-cloud-sdk/completion.zsh.inc" ]; then
        source /opt/google-cloud-sdk/completion.zsh.inc
    fi
elif [[ "$OSTYPE" == "freebsd"* ]]; then
    alias ls="ls -G"
    source ${HOME}/.zsh.bsd
elif [[ $OSTYPE = "darwin"* ]]; then
    GOPATH="${HOME}/Projects"
    GOROOT="/usr/local/opt/go/libexec"
    PATH="$PATH:$GOROOT/bin:$GOPATH/bin:/usr/local/opt/curl/bin:${HOME}/Library/Python/3.10/bin:/usr/local/opt/curl/bin"
    export GOPATH GOROOT PATH

    if type "fzf" > /dev/null; then
        source /usr/local/opt/fzf/shell/key-bindings.zsh
        source /usr/local/opt/fzf/shell/completion.zsh
    fi

    # zsh completions Homebrew
    if type brew &>/dev/null; then
        FPATH=$(brew --prefix)/share/zsh-completions:$FPATH

        autoload -Uz compinit
        compinit
    fi

    # Google Cloud SDK
    source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'
    source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc'

    # zsh-syntax-highlighting (brew package)
    source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

    # iterm shell integration
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
    source ${HOME}/.zsh.osx
fi
