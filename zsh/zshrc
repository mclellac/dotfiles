#-- Zsh Options --
HISTFILE=$HOME/.zhistory            # enable history saving on shell exit
HISTSIZE=1200                       # lines of history to maintain memory
SAVEHIST=1000                       # lines of history to maintain in history file.
setopt MULTIOS                      # pipe to multiple outputs
setopt CORRECT                      # spell check commands
setopt APPEND_HISTORY               # append rather than overwrite history file.
setopt HIST_EXPIRE_DUPS_FIRST       # allow dups, but expire old ones when I hit HISTSIZE
setopt EXTENDED_HISTORY             # save timestamp and runtime information
export SAVEHIST HISTFILE HISTSIZE
export HISTCONTROL=ignoredups
export TERM='xterm-256color'
export PROMPT="$(~/.config/carlcarl/powerline-zsh.py $?)"

#-- Bindings --
bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

#-- Aliases --
source ~/.zprivate                  # .zprivate includes private aliases.
alias ll="ls -al"
alias gitlog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gitstatus="git status -uno" # ignore untracked files, but show displayed (-u no doesn't show unstaged files.)
alias history="history 0"
alias agenda="gcalcli agenda"
alias calw="clear; gcalcli calw -w 12"
alias calm="clear; gcalcli calm -w 20"

#-- Unalias --
# just in case I'm using something that defaults to sissy interactive mode.
alias rm &>/dev/null && unalias rm
alias cp &>/dev/null && unalias cp
alias mv &>/dev/null && unalias mv

#-- Path Variables --
export GOROOT='/usr/local/go'
export GOPATH=$HOME/Projects
export PATH=$PATH:$HOME/bin:$GOROOT/bin:$GOPATH/bin:/usr/local/bin:/bin:/usr/bin:/usr/sbin:/sbin
export EDITOR=vim
export VISUAL=vim

#-- Zprezto --
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
setopt rmstarsilent

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# List the top 20 commands used in history.
cmdhist() {
    history|awk '{print $2}'|sort|uniq -c|sort -rn|head -20|  \
    awk '!max{max=$1;}{r="";i=s=60*$1/max;while(i-->0)r=r"•"; printf "\033[1;34m\%15s\033[0m  %5d ￨ \033[1;36m\%s\033[0m %s",$2,$1,r,"\n";}'
}

# Get and preserve the filename on download URL's that redirect
# and dont support the Content-Disposition header.
fncurl () { fn=`curl -sI "$@" | grep 'location:' | awk -F/ '{print $NF}' | sed 's/\r//'` curl -o $fn -L $@ }

#-- Functions --
# Rename tmux window to the address ssh'ed to
#ssh() {
#    if [ "$(ps -p $(ps -p $$ -o ppid=) -o comm=)" = "tmux" ]; then
#        #-- set tmux window name to username@hostname > CWD --
#        tmux rename-window "printf \"\033k`echo "$(whoami)\@$(hostname -fs)  ${PWD##*/}"`\033\\"
#        command ssh "$@"
#        tmux set-window-option automatic-rename "on" 1>/dev/null
#    else
#        command ssh "$@"
#    fi
#}

#--  Command Wrapper Functions. --
diga()          {  dig +nocmd "$*" any +multiline +noall +answer }
fed()           { find . -type f -name "$*" -exec vim {} \; }                       # find and edit the filename argument (usage: fed $filename) 
connerize()     { echo "$*" | sed -e "s/s/sh/g" -e "s/shsh/sh/g" -e "s/shh/sh/g" }  # a bit of Sean Connery for fun
connerize-say() { echo "$*" | sed 's/s/sh/g' | say -v "Alex" -i -r 200 }

# Simple calculator
calc() {
    # You will only need to escape multiplication (ie: "calc 2 \* 20").
    local result=""
    result="$(printf "scale=10;$*\n" | bc --mathlib | tr -d '\\\n')"
                          # └─ default (when `--mathlib` is used) is 20
    if [[ "$result" == *.* ]]; then
        # Improve the output for decimal numbers
        printf "$result" |
        sed -e 's/^\./0./'        `# add "0" for cases like ".5"` \
            -e 's/^-\./-0./'      `# add "0" for cases like "-.5"`\
            -e 's/0*$//;s/\.$//'   # remove trailing zeros
    else
        printf "$result"
    fi
    printf "\n"
}

#-- Powerline --
function _update_ps1() {
    export PROMPT="$(~/.config/carlcarl/powerline-zsh.py $?)"
}

# Update prompt & set tmux window name to username@hostname.
function precmd() {
    _update_ps1
    printf "\033k`echo "$(whoami)@$(hostname -fs)"`\033\\"
}

# Source platform specific settings based on os 
os=`uname`

if [ $os = 'Linux' ]; then
     alias ls="ls --color"
    . ${HOME}/.zsh.gnu 
elif [ $os = 'FreeBSD' ]; then
     alias ls="ls -G"
    . ${HOME}/.zsh.bsd
elif [ $os = 'Darwin' ]; then
    alias ls="ls -G"
    . ${HOME}/.iterm2_shell_integration.zsh
    . ${HOME}/.zsh.osx
fi
